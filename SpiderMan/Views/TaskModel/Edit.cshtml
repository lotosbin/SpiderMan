@model SpiderMan.Models.TaskModel
@using SpiderMan.Models;
@using sharp_net.Mvc;

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    <ol>
        <li>
            @Html.LabelFor(model => model.ArticleType)
            @Html.DropDownListFor(model => model.ArticleType, ((eArticleType)Model.ArticleType).ToSelectListItems())
            @*DropDownListFor中IEnumerable<SelectListItem>的selected永远无效的原因是
            Model相关属性值如果不为空，则必然会用于判断selected值，所以必须是int/string型*@
        </li>
        <li>
            @Html.LabelFor(model => model.Site)
            @Html.DropDownListFor(m => m.Site, (IEnumerable<SelectListItem>)ViewBag.SiteList)
        </li>
        <li>
            @Html.LabelFor(model => model.Url)
            @Html.EditorFor(model => model.Url)
            @Html.ValidationMessageFor(model => model.Url)
        </li>
        <li>
            @Html.LabelFor(model => model.Command)
            @Html.EditorFor(model => model.Command)
            @Html.ValidationMessageFor(model => model.Command)
        </li>
        <li>
            @Html.LabelFor(model => model.CommandType)
            @Html.DropDownListFor(model => model.CommandType, ((eCommandType)Model.CommandType).ToSelectListItems())
        </li>
        <li>
            @Html.LabelFor(model => model.Encoding)
            @Html.EditorFor(model => model.Encoding)
            @Html.ValidationMessageFor(model => model.Encoding)
        </li>
        <li>
            @Html.LabelFor(model => model.Interval)
            @Html.EditorFor(model => model.Interval)
            @Html.ValidationMessageFor(model => model.Interval)
        </li>
    </ol>
    <p>
        <input type="submit" />
    </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
