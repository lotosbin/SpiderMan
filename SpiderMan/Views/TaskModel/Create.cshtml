@model SpiderMan.Entity.TaskModel
@using sharp_net.Mvc;
@using sharp_net.Repositories;
@using SpiderMan.Entity;

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()
    <ol>
        <li>
            @Html.LabelFor(model => model.Name)
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </li>
        <li>
            @Html.LabelFor(model => model.Act)
            @Html.DropDownListFor(model => model.Act, eAct.Normal.ToSelectListItems())
        </li>
        <li>
            @Html.LabelFor(model => model.ArticleType)
            @Html.DropDownListFor(model => model.ArticleType, ((eArticleType)0).ToSelectListItems())
        </li>
        <li>
            @Html.LabelFor(model => model.Site)
            @Html.DropDownListFor(m => m.Site, (IEnumerable<SelectListItem>)ViewBag.SiteList)
        </li>
        <li>
            @Html.LabelFor(model => model.SourceCode)
            @Html.EditorFor(model => model.SourceCode)
        </li>
        <li>
            @Html.LabelFor(model => model.UrlParams)
            @Html.TextArea("UrlParams", (string)ViewBag.UrlParams, new { rows = 5, style = "width:320px;" })
        </li>
        <li>
            @Html.LabelFor(model => model.UrlTemp)
            @Html.EditorFor(model => model.UrlTemp)
            @Html.ValidationMessageFor(model => model.UrlTemp)
        </li>
        <li>
            @Html.LabelFor(model => model.CommandType)
            @Html.DropDownListFor(model => model.CommandType, ((eCommandType)0).ToSelectListItems())
        </li>
        <li>
            @Html.LabelFor(model => model.WithoutJquery)
            @Html.CheckBoxFor(model => model.WithoutJquery)
        </li>
        <li>
            @Html.LabelFor(model => model.WithUnderscore)
            @Html.CheckBoxFor(model => model.WithUnderscore)
        </li>
        <li>
            @Html.LabelFor(model => model.Interval)
            @Html.EditorFor(model => model.Interval)
            @Html.ValidationMessageFor(model => model.Interval)
        </li>
    </ol>
    <p>
        <input type="submit" />
    </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}